(not (+ 1 2) (- 3 4) (* 5 6) (/ 7 8) (and 9 10) (or t nil) (> 11 12) (>= 13 13) (< 14 15) (<= 16 16) (= 17 17) (myfunc "str"))
(loop for x f do (print x))
(loop for x from 1 to 10 do (print x))
(progn 1 2 3)
(if x (print "yup") (print "nope"))

#|multiline #| # |comment
here#| still here |#
"do cats \\eat quotes\" or recognize single \slashes?"
;comment
"multi-
    line string
        \"\\ constant folowed by unrecognized \slash"
( ) + - * / >= > < <= = aNd or not t NiL
#b10178 #B010 #O77 #o11 #xFF #XFFFFzyx #\f #\NEWLINE
loop for in do from to repeat while until progn
defparameter setf let vector vector-push vector-pop elt list
list-length length find position remove substitute concatenate if dotimes
defun slot-value open close with-open-file format funcall
defclass ' print :initform :reader :writer :accessor :initarg :allocation :type :documentation :initformaaaa
this_is_a_var
"#||#"
#|"|#
(defun BubbleSort (v)
        ;Sort elements of sequence
        (dotimes (i (length v))
                (dotimes (j (length v))
                        (if (> (elt v i) (elt v j))
                                (progn (setf temp (elt v j))
                                       (setf(elt v j) (elt v i))
                                       (setf(elt v i) temp))))))
(setf *x* (vector 7 15 1))
(BubbleSort *x*)
(print *x*)
kinda_weird_symbol_azAZ0-9+-*/@$%^&_=<>~.
